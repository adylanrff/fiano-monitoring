version: '3'
services:
  reverse_proxy:
    image: traefik:v2.3
    # Enables the web UI and tells Traefik to listen to docker
    command: 
      - --api.insecure=true 
      - --providers.docker
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=adylanrff@gmail.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
    #   # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"

        # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  redis:
    image: redis

  rq-worker:
    restart: always
    build: .
    deploy: 
      mode: replicated
      replicas: 2

    command: rqworker --with-scheduler --url redis://redis:6379

  fiano_monitoring:
    restart: always
    depends_on:
      - reverse_proxy
      - redis
    build: .
    command: gunicorn -b 0.0.0.0:8000 app:app
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fiano_monitoring.rule=Host(`fiano-monitoring.adylanrff.com`)"
      - "traefik.http.routers.fiano_monitoring.entrypoints=websecure"
      - "traefik.http.routers.fiano_monitoring.tls.certresolver=myresolver"
      - "traefik.http.routers.fiano_monitoring.tls=true"
    env_file: 
      - .env
